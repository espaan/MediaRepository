<?php
/**
 * MediaRepository.
 *
 * @copyright Axel Guckelsberger
 * @license http://www.gnu.org/licenses/lgpl.html GNU Lesser General Public License
 * @package MediaRepository
 * @author Axel Guckelsberger <info@guite.de>.
 * @link http://zikula.de
 * @link http://zikula.org
 * @version Generated by ModuleStudio 0.5.5 (http://modulestudio.de) at Fri Jun 22 18:45:37 CEST 2012.
 */

/**
 * Account api base class.
 */
class MediaRepository_Api_Base_Account extends Zikula_AbstractApi
{
    /**
     * Return an array of items to show in the your account panel.
     *
     * @param array $args List of arguments.
     *
     * @return array List of collected account items
     */
    public function getall($args)
    {
        // collect items in an array
        $items = array();
    
        $useAccountPage = $this->getVar('useAccountPage', true);
        if ($useAccountPage === false) {
            return $items;
        }
    
        $userName = (isset($args['uname'])) ? $args['uname'] : UserUtil::getVar('uname');
        // does this user exist?
        if (UserUtil::getIdFromName($userName) === false) {
            // user does not exist
            return $items;
        }
    
        if (!SecurityUtil::checkPermission($this->name . '::', '::', ACCESS_OVERVIEW)) {
            return LogUtil::registerPermissionError();
        }
    
        // Create an array of links to return
        $objectType = 'repository';
        if (SecurityUtil::checkPermission($this->name . ':' . ucwords($objectType) . ':', '::', ACCESS_READ)) {
            $items[] = array(
                'url' => ModUtil::url($this->name, 'user', 'view', array('ot' => $objectType, 'own' => 1)),
                'title'   => $this->__('My repositories'),
                'icon'    => 'windowlist.png',
                'module'  => 'core',
                'set'     => 'icons/large'
            );
        }
        $objectType = 'mediaHandler';
        if (SecurityUtil::checkPermission($this->name . ':' . ucwords($objectType) . ':', '::', ACCESS_READ)) {
            $items[] = array(
                'url' => ModUtil::url($this->name, 'user', 'view', array('ot' => $objectType, 'own' => 1)),
                'title'   => $this->__('My media handlers'),
                'icon'    => 'windowlist.png',
                'module'  => 'core',
                'set'     => 'icons/large'
            );
        }
        $objectType = 'medium';
        if (SecurityUtil::checkPermission($this->name . ':' . ucwords($objectType) . ':', '::', ACCESS_READ)) {
            $items[] = array(
                'url' => ModUtil::url($this->name, 'user', 'view', array('ot' => $objectType, 'own' => 1)),
                'title'   => $this->__('My media'),
                'icon'    => 'windowlist.png',
                'module'  => 'core',
                'set'     => 'icons/large'
            );
        }
        $objectType = 'thumbSize';
        if (SecurityUtil::checkPermission($this->name . ':' . ucwords($objectType) . ':', '::', ACCESS_READ)) {
            $items[] = array(
                'url' => ModUtil::url($this->name, 'user', 'view', array('ot' => $objectType, 'own' => 1)),
                'title'   => $this->__('My thumb sizes'),
                'icon'    => 'windowlist.png',
                'module'  => 'core',
                'set'     => 'icons/large'
            );
        }
        if (SecurityUtil::checkPermission($this->name . '::', '::', ACCESS_ADMIN)) {
            $item[] = array(
                'url'   => ModUtil::url($this->name, 'admin', 'main'),
                'title' => $this->__('Media repository Backend'),
                'icon'   => 'configure.png',
                'module' => 'core',
                'set'    => 'icons/large'
            );
        }
    
        // return the items
        return $items;
    }
}
