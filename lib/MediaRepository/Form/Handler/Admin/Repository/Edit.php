<?php
/**
 * MediaRepository.
 *
 * @copyright Axel Guckelsberger
 * @license http://www.gnu.org/licenses/lgpl.html GNU Lesser General Public License
 * @package MediaRepository
 * @author Axel Guckelsberger <info@guite.de>.
 * @link http://zikula.de
 * @link http://zikula.org
 * @version Generated by ModuleStudio 0.5.5 (http://modulestudio.de) at Fri Jun 22 18:45:35 CEST 2012.
 */

/**
 * This handler class handles the page events of the Form called by the MediaRepository_admin_edit() function.
 * It aims on the repository object type.
 */
class MediaRepository_Form_Handler_Admin_Repository_Edit extends MediaRepository_Form_Handler_Admin_Repository_Base_Edit
{
    // feel free to extend the base handler class here
     public function initialize(Zikula_Form_View $view)
    {
         parent::initialize($view);
         //initialize the popup menu that allows choosing between disk and database storage.
         $storageItems = array( array('text' => 'On Disk', 'value' => '1'),
                                array('text' => 'In Database', 'value' => '2') );
         $this->view->assign('storageItems', $storageItems);
         
         //initialize the popup menu that determines group that has access to this file
         $permScope = array( array('text' => 'Public/Guests', 'value' => '1'),
                            array('text' => 'Registrered Users', 'value' => '2'),
                                array('text' => 'Group', 'value' => '3'),
                                array('text' => 'Owner', 'value' => '4'),
                                array('text' => 'Admins', 'value' => '5'));
         $this->view->assign('permScope', $permScope);
         
         //create the popup menu that deteremines the upload naming convention
         $uploadNamingCon = array( array('text' => 'Original File Name', 'value' => '1'),
                                array('text' => 'Random File Name', 'value' => '2'),
                                array('text' => 'Numbered with Prefix', 'value' => '3') );
         $this->view->assign('uploadNamingCon', $uploadNamingCon);
         //add the style of cropping wanted
         $cropSizeMode = array( array('text' => 'Enforce a default size', 'value' => '1'),
                                array('text' => 'Keep size variable and enforce aspect ratio', 'value' => '2'),
                                array('text' => 'Keep size and aspect ratio variable', 'value' => '3') );
         $this->view->assign('cropSizeMode', $cropSizeMode);
         
        //add the dropdownlist the gives choices for how downloadable files are displayed.
         $dlmode = array( array('text' => 'Name of file only', 'value' => '1'),
                                array('text' => 'Name of file and path to file', 'value' => '2'),
                                array('text' => 'Image of file', 'value' => '3'),
                                array('text' => 'Name and image of file ', 'value' => '4') );
         $this->view->assign('downloadMode', $dlmode);
         
            
    }
    
}
